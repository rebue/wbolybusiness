<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wboly.modules.dao.order.VblOrderMapper">

	<!-- 订单信息 -->

	<!-- 根据订单编号查询订单是否是待支付订单 -->
	<select id="selectOrderByOrderId" parameterType="String" resultType="java.lang.Integer">
		SELECT state FROM vbl_market_order_data.dbo.vbl_shop_order WITH (nolock)
		WHERE orderId = #{orderId} AND state = 0 AND cancelType = 0
	</select>

	<!-- 根据订单编号查询订单签收码 -->
	<select id="selectOrderCodeByOrderId" parameterType="java.util.HashMap" resultType="String">
		SELECT code FROM vbl_market_order_data.dbo.vbl_shop_order WITH (nolock)
		WHERE 1 = 1
		<if test="orderId != null and orderId != ''">
			AND orderId = #{orderId}
		</if>
		<if test="buyerUid != null and buyerUid != ''">
			AND buyerUid = #{buyerUid}
		</if>
		AND state IN (1, 2)
	</select>

	<!-- 根据地址编号查询订单是否可以修改收货地址 -->
	<select id="selectOrderStateByAddId" parameterType="com.wboly.rpc.entity.AddressEntity" resultType="java.util.Map">
		SELECT state FROM vbl_market_order_data.dbo.vbl_shop_order WITH(nolock)
		WHERE 1 = 1
		<if test="addressId != null and addressId != ''">
			AND addressId = #{addressId}
		</if>
		AND state IN (1, 2)
	</select>

	<!-- 查询购物车用户商品信息 -->
	<select id="selectCartByParm" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT vgs.attrVal,a.* FROM(
			SELECT va.activityId, vcu.goodsTitle, vcu.buyerUid,
			vcu.goodsId, vcu.shopId, vcu.skuId, vcu.supplierUid, vcu.num
			FROM vbl_market_order_data.dbo.vbl_cart_user vcu WITH (nolock)
			LEFT JOIN vbl_market_goods_data.dbo.vbl_activity va WITH (nolock) ON va.goodsId = vcu.goodsId
			AND va.shopId = vcu.shopId AND va.skuId = vcu.skuId AND va.supplierUid = vcu.supplierUid
			WHERE 1 = 1 AND vcu.status = 1
			<if test="cartIds !=null and cartIds !=''">
				AND vcu.id IN
				<foreach collection="cartIds" item="item" open="(" separator=","
					close=")">
					#{item}
				</foreach>
			</if>
			<if test="shopId !=null and shopId!=''">AND vcu.shopId =#{shopId}</if>
			<if test="goodsId !=null and goodsId!=''">AND vcu.goodsId =#{goodsId}</if>
			<if test="supplierUid !=null and supplierUid!=''">AND vcu.supplierUid =#{supplierUid}</if>
			<if test="skuId !=null and skuId!=''">AND vcu.skuId =#{skuId}</if>
			<if test="buyerUid !=null and buyerUid!=''">AND vcu.buyerUid =#{buyerUid}</if>
		) a
		LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_sku vgs WITH (nolock) ON vgs.skuId= a.skuId
	</select>

	<!-- 查询这个活动是否有规则限制 -->
	<select id="selectActivityRuleByParm" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT CONVERT(VARCHAR, r.type)+'_'+CONVERT(VARCHAR, r.num) AS afterNum
		FROM vbl_market_goods_data.dbo.vbl_goods_rule r WITH(nolock)
		WHERE 1=1 AND r.activityId=#{activityId} AND r.isValid=1
	</select>

	<!-- 查询这个消费者是否购买过该商品 -->
	<select id="selectActivityRuleLogByParm" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT ISNULL(SUM(rl.num), 0) AS haveNum
		FROM vbl_market_goods_data.dbo.vbl_goods_rule_log rl WITH(nolock)
		where 1=1 AND rl.buyerUid=#{buyerUid} AND rl.activityId=#{activityId} AND rl.type=#{ruleType}
	</select>

	<!-- 用户购物车列表 -->
	<select id="UserCarShops" parameterType="com.wboly.rpc.entity.CarShopEntity" resultType="java.util.Map">
		SELECT ISNULL(CONVERT(VARCHAR, r.type), '') AS ruleType,
		ISNULL(CONVERT (VARCHAR, r.beginTime),'') AS ruleBeginTime,
		ISNULL(CONVERT (VARCHAR, r.endTime),'') AS ruleEndTime,
		ISNULL(CONVERT(VARCHAR, r.num), '') AS ruleNum,a1.* FROM (
			SELECT va.activityId, a.* FROM (
				SELECT c1.id, buyerUid, shopId, supplierUid, goodsId,
				skuId, num, goodsTitle, price, img, dateline, status, c2.stockNum,
				c2.attrval, c2.retailPrice, c2.retailBacLimit retailBacLimit, c2.marketPrice
				FROM vbl_market_order_data.dbo.vbl_cart_user c1 WITH (NOLOCK),
				(SELECT TOP (#{start} + #{limit}) row_number () OVER (ORDER BY u.dateline DESC) rn,
					id, p1.retailPrice, p.retailBacLimit, p1.marketPrice, s.stockNum, sku.attrval
					FROM vbl_market_order_data.dbo.vbl_cart_user u WITH (NOLOCK)
					LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_price_cashBack p WITH (NOLOCK) ON 
					u.goodsId = p.goodsId AND u.skuId = p.skuId AND u.supplierUid = p.supplierUid AND u.shopId = p.shopid
					LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_price p1 WITH (NOLOCK) ON u.goodsId = p1.goodsId
					AND u.skuId = p1.skuId AND u.supplierUid = p1.userid
					LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_stockInfo s WITH (NOLOCK) ON
					u.shopId = s.shopid AND u.goodsId = s.goodsId AND u.skuId = s.skuId AND s.supplierUid = u.supplierUid
					LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_sku sku WITH (NOLOCK) ON u.skuId = sku.skuid
					WHERE buyerUid = #{buyerUid} AND u.shopId = #{shopId}
				) c2
				WHERE c1.id = c2.id AND c2.rn > ${start}
			) a
			LEFT JOIN vbl_market_goods_data.dbo.vbl_activity va WITH (NOLOCK) ON 1 = 1
			AND va.goodsId = a.goodsId AND va.skuId = a.skuId AND va.supplierUid = a.supplierUid AND va.shopId = a.shopId
		) a1
		LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_rule r WITH (NOLOCK) ON r.activityId = a1.activityId
	</select>

	<!-- 查询用户购物车的商品数量 -->
	<select id="selectUserCatGoodsCount" parameterType="com.wboly.rpc.entity.CarShopEntity" resultType="java.lang.Integer">
		SELECT sum(num) from vbl_market_order_data.dbo.vbl_cart_user WITH(NOLOCK) where buyerUid = #{buyerUid} and shopid = #{shopId}
	</select>

	<!-- 查询用户订单信息 -->
	<select id="selectUserOrderInfo" parameterType="com.wboly.rpc.entity.OrderEntity" resultType="java.util.Map">
		SELECT lp.provinceName + lc.cityName + la.areaName + ls.streetName + a3.address AS shopAddress,
		a3.mobile, a3.userid, a3.shopName, a3.orderId, a3.shopId, a3.buyerUid, a3.num, a3.money, a3.state,
		a3.code, a3.message, a3.dateline, a3.addressId, a3.cancelType, a3.payType, a3.finishDate, a3.system, a3.courierFee
		FROM (
			SELECT vula.mobile, a2.* FROM (
				SELECT vs.userid, vs.shopName, vs.provinceId,
				vs.cityId, vs.areaId, vs.streetId, vs.address, a.* FROM (
					SELECT CONVERT (VARCHAR, s1.orderId) AS orderId, shopId, buyerUid, num,
					money, state, code, message, dateline, addressId, cancelType, payType, finishDate,
					dbo.GetTimeStamp (GETDATE() ,- 1) system, courierFee
					FROM vbl_market_order_data.dbo.vbl_shop_order s1 WITH (NOLOCK), (
						SELECT TOP (#{start}+#{limit}) row_number () OVER (ORDER BY dateline DESC) rn, orderId
						FROM vbl_market_order_data.dbo.vbl_shop_order WITH (NOLOCK)
						where 1=1 and buyerUid = #{buyerUid}
						<if test="state != null and state != ''">
							<if test="state == 1">
								AND state = 0
							</if>
							<if test="state == 2">
								AND state in (1,2)
							</if>
							<if test="state == 4">
								AND state in (3,4,7)
							</if>
							<if test="state == 9">
								AND state in(4,8)
								<if test="returnState > 0">
									and orderId in(
										SELECT orderId from vbl_market_order_data.dbo.vbl_shop_order_inventory
										where buyerUid = #{buyerUid} and returnState =#{returnState} GROUP BY orderId
									)
								</if>
								<if test="aftersaleState > 0">
									and orderId in(
										SELECT orderId from vbl_market_order_data.dbo.vbl_shop_order_inventory
										where buyerUid = #{buyerUid} and aftersaleState =#{aftersaleState} GROUP BY orderId
									)
								</if>
							</if>
							<if test="state != 0 and state != 1 and state != 2 and state != 4 and state != 9">
								and state = #{state}
							</if>
						</if>
					)s2
					where s1.orderId=s2.orderId AND s2.rn > ${start}
				) a
				LEFT JOIN vbl_market_goods_data.dbo.vbl_shop vs WITH (nolock) ON vs.shopId = a.shopId
			) a2
			LEFT JOIN vbl_market_base_data.dbo.vbl_user_league_application vula WITH (nolock) ON vula.userId = a2.userid AND vula.status = 3
		) a3
		LEFT JOIN locality_data.dbo.loc_province lp WITH (nolock) ON lp.provinceId = a3.provinceId
		LEFT JOIN locality_data.dbo.loc_city lc WITH (nolock) ON lc.cityId = a3.cityId
		LEFT JOIN locality_data.dbo.loc_area la WITH (nolock) ON la.areaId = a3.areaId
		LEFT JOIN locality_data.dbo.loc_street ls WITH (nolock) ON ls.streetId = a3.streetId
	</select>

	<!-- 查询用户订单清单信息 -->
	<select id="selectUserOrdersInventory" parameterType="com.wboly.rpc.entity.OrderEntity" resultType="java.util.Map">
		SELECT ISNULL(CONVERT(VARCHAR,r.type), '') AS ruleType,
		ISNULL(CONVERT(VARCHAR,r.beginTime), '') AS ruleBeginTime,
		ISNULL(CONVERT(VARCHAR,r.endTime), '') AS ruleEndTime,
		ISNULL(CONVERT(VARCHAR,r.num), '') AS ruleNum, a.* FROM (
			SELECT o.orderId, o.goodsId, o.skuId, sku.attrval, barcode, o.buyerUid,
			o.supplierUid, o.num, o.retailPrice, o.retailBacLimit, o.money ,o.goodsTitle, 
			g.faceimg, o.appraiseState, o.returnState, o.aftersaleState, a.activityId, 
			s.shopid,case when dbo.GetTimeStamp(GETDATE(),-1) - p.rebatesDate > 0 then 1 else 0 end backState
			<if test="returnState > 0">
				, z.status status
			</if>
			<if test=" aftersaleState > 0">
				, z.state status
			</if>
			from vbl_market_order_data.dbo.vbl_shop_order_inventory o WITH(NOLOCK)
			LEFT JOIN vbl_market_goods_data.dbo.vbl_goods g on o.goodsId=g.goodsid
			LEFT JOIN vbl_market_order_data.dbo.vbl_shop_order s WITH(NOLOCK) on o.orderId = s.orderId
			LEFT JOIN vbl_market_goods_data.dbo.vbl_activity_off a WITH(NOLOCK) on
			o.goodsId=a.goodsid and o.skuId=a.skuid and o.supplierUid=a.supplierUid and a.shopid=s.shopId
			LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_sku sku WITH(NOLOCK) on o.skuId=sku.skuid
			Left join vbl_market_order_data.dbo.vbl_shop_order_plantorefund p with(nolock) on
			o.orderId=p.orderId and o.goodsId=p.goodsId and o.skuId=p.skuId and p.supplierUid = o.supplierUid
			<if test=" returnState >0">
				LEFT JOIN vbl_market_order_data.dbo.vbl_shop_order_return z WITH(NOLOCK) on 
				o.orderId =z.orderId and o.goodsId=z.goodsid and z.skuId=a.skuid
			</if>
			<if test="aftersaleState > 0">
				LEFT JOIN vbl_market_order_data.dbo.vbl_shop_order_aftersale z WITH(NOLOCK) on
				o.orderId =z.orderId and o.goodsId=z.goodsid and z.skuId=a.skuid
			</if>
			where 1=1 and a.activityId is not NULL and o.orderId = #{orderIds}
			<if test="returnState >0">
				and o.returnState =#{returnState}
			</if>
			<if test="aftersaleState > 0">
				and o.aftersaleState = #{aftersaleState}
			</if>
		) a
		LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_rule r WITH (NOLOCK) ON a.activityId = r.activityId
	</select>

	<!-- 详情页分类行数 -->
	<select id="AppraiseclassifyCount" parameterType="com.wboly.rpc.entity.AppraiseEntity" resultType="java.util.Map">
		SELECT a.babyevaluation, COUNT (a.babyevaluation) num FROM (
			SELECT CASE babyevaluation WHEN 2 THEN 3 WHEN 3 THEN 3 WHEN 4 THEN 5 WHEN 5 THEN 5 ELSE 1 END babyevaluation
			FROM vbl_market_order_data.dbo.vbl_shop_order_appraise WITH (NOLOCK)
			WHERE shopId = #{shopId} AND goodsId = #{goodsId}
		) a
		GROUP BY a.babyevaluation UNION
		SELECT 6, COUNT (babyevaluation) num1
		FROM vbl_market_order_data.dbo.vbl_shop_order_appraise WITH (NOLOCK)
		WHERE LEN(imgId) > 0 AND shopId = #{shopId} AND goodsId = #{goodsId}
	</select>

	<!-- 详情页评价数据 -->
	<select id="goodsAppraise" parameterType="com.wboly.rpc.entity.AppraiseEntity" resultType="com.wboly.rpc.entity.AppraiseEntity">
		SELECT buyerUid,A3.userName buyerName ,dateline,content,(
			select ','+img from vbl_market_order_data.dbo.vbl_shop_order_appraise_img
			where CHARINDEX(','+LTRIM(id)+',',','+A1.imgId+',')>0 FOR XML PATH('')
		) imgs,
		replyMessage,dbo.GetDateByTimeStamp(dateline) timer,babyevaluation 
		from vbl_market_order_data.dbo.vbl_shop_order_appraise A1 WITH(NOLOCK),(
			SELECT TOP (#{start} + #{limit}) row_number() OVER (ORDER BY DATELINE DESC) rn, appraiseId
			FROM vbl_market_order_data.dbo.vbl_shop_order_appraise WITH(NOLOCK)
			where shopId = #{shopId} and goodsId = #{goodsId}
			<if test="type !=null and type !=''">
				<if test="type == 1">
					and babyevaluation in(1)
				</if>
				<if test="type == 2">
					and babyevaluation in(2,3)
				</if>
				<if test="type == 3">
					and babyevaluation in(4,5)
				</if>
				<if test="type == 4">
					and LEN(imgId) >0
				</if>
			</if>
		)A2 , vbl_market_base_data.dbo.vbl_user A3 WITH(NOLOCK)
		where A2.appraiseId = A1.appraiseId and A1.buyerUid = A3.userid AND A2.rn > ${start}
	</select>

	<!-- 浏览足迹和看了又看 -->
	<select id="UserFootprints" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT a.* FROM(
			select top (${limit}) row_number() OVER (ORDER BY Id DESC) rn, Id, userId,
			shopId, goodsId, supplierUid,hits, goodsTitle, faceImg, retailPrice, retailBacLimit, marketPrice, lineDate
			from vbl_market_goods_data.dbo.vbl_footprint WITH(NOLOCK) where userId = #{userId} and shopId = #{shopId}
			<if test="type == '1'">
				order by lineDate desc
			</if>
			<if test="type != '1'">
				order by hits desc
			</if>
		) a WHERE a.rn>${start}
	</select>

	<!-- 查询购物车 -->
	<select id="selectShoppingCart" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT vcu.goodsId, vcu.skuId, vcu.skuId, vcu.supplierUid, 
		SUM(vcu.num * va.retailPrice) AS retailPrice, SUM(vcu.num) AS num
		FROM vbl_market_order_data.dbo.vbl_cart_user vcu WITH(NOLOCK)
		LEFT JOIN vbl_market_goods_data.dbo.vbl_activity va WITH(NOLOCK) ON vcu.shopId=va.shopId
		AND vcu.goodsId=va.goodsId AND vcu.skuId=va.skuId AND vcu.supplierUid=va.supplierUid
		WHERE vcu.buyerUid=${buyerUid} AND vcu.shopId=${shopId} AND vcu.id IN (${ids})
		GROUP BY vcu.goodsId, vcu.skuId, vcu.skuId, vcu.supplierUid
	</select>

	<!-- 查询订单是否存在 -->
	<select id="slelectShopOrder" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT * FROM vbl_market_order_data.dbo.vbl_shop_order WITH(NOLOCK) WHERE orderId=${orderId}
	</select>

	<!-- 添加门店交易订单信息 -->
	<insert id="insertVblShopOrder" parameterType="java.util.Map">
		INSERT INTO vbl_market_order_data.dbo.vbl_shop_order ( orderId, shopId, buyerUid, num, money, state, 
		code, message, dateline, addressId, cancelType, payType, finishDate, courierId, courierFee)
		VALUES ( ${orderId}, ${shopId}, ${buyerUid}, ${totalNum}, ${totalMoney}, 0,
		${code}, '${message}', ${dateline}, ${addressId}, 0, ${payType}, ${dateline} + 3600 * 24, 0, ${courierFee} )
	</insert>

	<!-- 查询门店商品库存 -->
	<select id="selectShopInventory" parameterType="java.util.Map" resultType="String">
		SELECT stockNum FROM vbl_market_goods_data.dbo.vbl_goods_stockInfo WITH(NOLOCK)
		WHERE shopId=${shopId} AND goodsId=${goodsId} AND skuId=${skuId} AND supplierUid=${supplierUid}
	</select>

	<!-- 修改门店库存 -->
	<update id="updateShopInventory" parameterType="java.util.Map">
		UPDATE vbl_market_goods_data.dbo.vbl_goods_stockInfo SET stockNum = stockNum - vcu.num
		FROM vbl_market_goods_data.dbo.vbl_goods_stockInfo vgs WITH(NOLOCK)
		LEFT JOIN vbl_market_order_data.dbo.vbl_cart_user vcu WITH(NOLOCK) ON vcu.shopId=vgs.shopId
		AND vcu.goodsId=vgs.goodsId AND vcu.skuId=vgs.skuId AND vcu.supplierUid=vgs.supplierUid
		WHERE vcu.shopId=${shopId} AND vcu.buyerUid=${buyerUid} AND vcu.id IN (${ids})
	</update>

	<!-- 添加门店交易订单清单信息 -->
	<insert id="insertVblShopOrderInventory" parameterType="java.util.Map">
		INSERT INTO vbl_market_order_data.dbo.vbl_shop_order_inventory ( orderId,
		goodsId, goodsTitle, skuId, barcode, buyerUid, supplierUid, num,
		retailPrice, money, note, appraiseState, aftersaleState, leastBacLimit, retailBacLimit, price )
		SELECT ${orderId}, a.goodsId, a.goodsTitle, a.skuId, b.barcode, a.buyerUid, a.supplierUid, a.num,
		c.retailPrice, c.retailPrice * a.num, '', 0, 0, c.leastBacLimit, d.retailBacLimit , c.price
		FROM vbl_market_order_data.dbo.vbl_cart_user a WITH(NOLOCK)
		LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_barcode b WITH(NOLOCK) ON b.goodsId = a.goodsId AND b.skuId = a.skuId
		LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_price c ON c.goodsId = a.goodsId AND c.skuId = a.skuId AND c.userid=a.supplierUid
		LEFT JOIN vbl_market_goods_data.dbo.vbl_goods_price_cashBack d WITH(NOLOCK) ON
		d.shopId = a.shopId AND d.goodsId=a.goodsId AND d.skuId=a.skuId AND d.supplierUid=a.supplierUid
		WHERE a.buyerUid = ${buyerUid} AND a.shopId = ${shopId} AND a.id IN (${ids})
	</insert>

	<!-- 删除购物车 -->
	<delete id="deleteShoppingCartInId" parameterType="java.util.Map">
		DELETE vbl_market_order_data.dbo.vbl_cart_user
		WHERE buyerUid = ${buyerUid} AND shopId = ${shopId} AND id IN(${ids})
	</delete>

	<!-- 进行订单规则检查 -->
	<select id="orderRuleChecking" statementType="CALLABLE" parameterType="java.util.Map">
		{#{result,mode=OUT,jdbcType=INTEGER}=CALL vbl_market_goods_data.dbo.Chk_OrderRule(
		#{orderId,mode=IN,jdbcType=INTEGER})}
	</select>

	<!-- 保存规则检查日志(如果有) -->
	<select id="saveRuleChecksLog" statementType="CALLABLE" parameterType="java.util.Map">
		{#{results,mode=OUT,jdbcType=INTEGER}=CALL vbl_market_goods_data.dbo.In_OrderRuleLog(
		#{orderId,mode=IN,jdbcType=INTEGER}, #{buyerUid,mode=IN,jdbcType=INTEGER})}
	</select>

	<!-- 添加门店订单交易付款信息 -->
	<insert id="insertVblShopOrderTradeRecord" parameterType="java.util.Map">
		INSERT INTO vbl_market_order_data.dbo.vbl_shop_order_trade_record ( orderId, buyerUid, userId, userName, message, dateline )
		VALUES ( ${orderId}, ${buyerUid}, ${buyerUid}, '${userName}', '${describe}', ${dateline} );
	</insert>
</mapper>
