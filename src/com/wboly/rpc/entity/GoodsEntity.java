package com.wboly.rpc.entity;

/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.ArrayList;
import java.util.BitSet;
import java.util.Collections;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.apache.thrift.EncodingUtils;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;

@SuppressWarnings({"rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2016-11-09")
public class GoodsEntity implements org.apache.thrift.TBase<GoodsEntity, GoodsEntity._Fields>, java.io.Serializable, Cloneable, Comparable<GoodsEntity> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GoodsEntity");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField GOODS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField GOODS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField GOODS_NEW_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsNewPrice", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField GOODS_IMG_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsImg", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField GOODS_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsNum", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField GOODS_DETAILS_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsDetails", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField GOODS_ADDR_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsAddr", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField GOODSOLD_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsoldPrice", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField SKU_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("skuId", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField ATTR_VAL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("attrValId", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField ATTR_VAL_FIELD_DESC = new org.apache.thrift.protocol.TField("attrVal", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField PACKING_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("packingList", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField POST_UID_FIELD_DESC = new org.apache.thrift.protocol.TField("postUid", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField DATELINE_FIELD_DESC = new org.apache.thrift.protocol.TField("dateline", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField PHOTO_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("photoType", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField IMG_PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("imgPath", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField WEB_DESCRIBE_FIELD_DESC = new org.apache.thrift.protocol.TField("webDescribe", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField USERS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("usersId", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField SHOP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("shopId", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField SPEC_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("specName", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField SPEC_PARAM_FIELD_DESC = new org.apache.thrift.protocol.TField("specParam", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField STOCK_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("stockNum", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField LIMIT_FIELD_DESC = new org.apache.thrift.protocol.TField("limit", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField START_FIELD_DESC = new org.apache.thrift.protocol.TField("start", org.apache.thrift.protocol.TType.I32, (short)25);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new GoodsEntityStandardSchemeFactory());
    schemes.put(TupleScheme.class, new GoodsEntityTupleSchemeFactory());
  }

  public int id; // required
  public int goodsId; // required
  public String goodsName; // required
  public String goodsNewPrice; // required
  public String goodsImg; // required
  public String goodsNum; // required
  public String goodsDetails; // required
  public String goodsAddr; // required
  public String goodsoldPrice; // required
  public String skuId; // required
  public String attrValId; // required
  public String attrVal; // required
  public String packingList; // required
  public String postUid; // required
  public String dateline; // required
  public String photoType; // required
  public String imgPath; // required
  public String webDescribe; // required
  public String usersId; // required
  public String shopId; // required
  public String specName; // required
  public String specParam; // required
  public String stockNum; // required
  public int limit; // required
  public int start; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    GOODS_ID((short)2, "goodsId"),
    GOODS_NAME((short)3, "goodsName"),
    GOODS_NEW_PRICE((short)4, "goodsNewPrice"),
    GOODS_IMG((short)5, "goodsImg"),
    GOODS_NUM((short)6, "goodsNum"),
    GOODS_DETAILS((short)7, "goodsDetails"),
    GOODS_ADDR((short)8, "goodsAddr"),
    GOODSOLD_PRICE((short)9, "goodsoldPrice"),
    SKU_ID((short)10, "skuId"),
    ATTR_VAL_ID((short)11, "attrValId"),
    ATTR_VAL((short)12, "attrVal"),
    PACKING_LIST((short)13, "packingList"),
    POST_UID((short)14, "postUid"),
    DATELINE((short)15, "dateline"),
    PHOTO_TYPE((short)16, "photoType"),
    IMG_PATH((short)17, "imgPath"),
    WEB_DESCRIBE((short)18, "webDescribe"),
    USERS_ID((short)19, "usersId"),
    SHOP_ID((short)20, "shopId"),
    SPEC_NAME((short)21, "specName"),
    SPEC_PARAM((short)22, "specParam"),
    STOCK_NUM((short)23, "stockNum"),
    LIMIT((short)24, "limit"),
    START((short)25, "start");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // GOODS_ID
          return GOODS_ID;
        case 3: // GOODS_NAME
          return GOODS_NAME;
        case 4: // GOODS_NEW_PRICE
          return GOODS_NEW_PRICE;
        case 5: // GOODS_IMG
          return GOODS_IMG;
        case 6: // GOODS_NUM
          return GOODS_NUM;
        case 7: // GOODS_DETAILS
          return GOODS_DETAILS;
        case 8: // GOODS_ADDR
          return GOODS_ADDR;
        case 9: // GOODSOLD_PRICE
          return GOODSOLD_PRICE;
        case 10: // SKU_ID
          return SKU_ID;
        case 11: // ATTR_VAL_ID
          return ATTR_VAL_ID;
        case 12: // ATTR_VAL
          return ATTR_VAL;
        case 13: // PACKING_LIST
          return PACKING_LIST;
        case 14: // POST_UID
          return POST_UID;
        case 15: // DATELINE
          return DATELINE;
        case 16: // PHOTO_TYPE
          return PHOTO_TYPE;
        case 17: // IMG_PATH
          return IMG_PATH;
        case 18: // WEB_DESCRIBE
          return WEB_DESCRIBE;
        case 19: // USERS_ID
          return USERS_ID;
        case 20: // SHOP_ID
          return SHOP_ID;
        case 21: // SPEC_NAME
          return SPEC_NAME;
        case 22: // SPEC_PARAM
          return SPEC_PARAM;
        case 23: // STOCK_NUM
          return STOCK_NUM;
        case 24: // LIMIT
          return LIMIT;
        case 25: // START
          return START;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __GOODSID_ISSET_ID = 1;
  private static final int __LIMIT_ISSET_ID = 2;
  private static final int __START_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.GOODS_ID, new org.apache.thrift.meta_data.FieldMetaData("goodsId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.GOODS_NAME, new org.apache.thrift.meta_data.FieldMetaData("goodsName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GOODS_NEW_PRICE, new org.apache.thrift.meta_data.FieldMetaData("goodsNewPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GOODS_IMG, new org.apache.thrift.meta_data.FieldMetaData("goodsImg", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GOODS_NUM, new org.apache.thrift.meta_data.FieldMetaData("goodsNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GOODS_DETAILS, new org.apache.thrift.meta_data.FieldMetaData("goodsDetails", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GOODS_ADDR, new org.apache.thrift.meta_data.FieldMetaData("goodsAddr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GOODSOLD_PRICE, new org.apache.thrift.meta_data.FieldMetaData("goodsoldPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SKU_ID, new org.apache.thrift.meta_data.FieldMetaData("skuId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ATTR_VAL_ID, new org.apache.thrift.meta_data.FieldMetaData("attrValId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ATTR_VAL, new org.apache.thrift.meta_data.FieldMetaData("attrVal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PACKING_LIST, new org.apache.thrift.meta_data.FieldMetaData("packingList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POST_UID, new org.apache.thrift.meta_data.FieldMetaData("postUid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATELINE, new org.apache.thrift.meta_data.FieldMetaData("dateline", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHOTO_TYPE, new org.apache.thrift.meta_data.FieldMetaData("photoType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IMG_PATH, new org.apache.thrift.meta_data.FieldMetaData("imgPath", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEB_DESCRIBE, new org.apache.thrift.meta_data.FieldMetaData("webDescribe", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USERS_ID, new org.apache.thrift.meta_data.FieldMetaData("usersId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHOP_ID, new org.apache.thrift.meta_data.FieldMetaData("shopId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SPEC_NAME, new org.apache.thrift.meta_data.FieldMetaData("specName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SPEC_PARAM, new org.apache.thrift.meta_data.FieldMetaData("specParam", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STOCK_NUM, new org.apache.thrift.meta_data.FieldMetaData("stockNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LIMIT, new org.apache.thrift.meta_data.FieldMetaData("limit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.START, new org.apache.thrift.meta_data.FieldMetaData("start", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GoodsEntity.class, metaDataMap);
  }

  public GoodsEntity() {
  }

  public GoodsEntity(
    int id,
    int goodsId,
    String goodsName,
    String goodsNewPrice,
    String goodsImg,
    String goodsNum,
    String goodsDetails,
    String goodsAddr,
    String goodsoldPrice,
    String skuId,
    String attrValId,
    String attrVal,
    String packingList,
    String postUid,
    String dateline,
    String photoType,
    String imgPath,
    String webDescribe,
    String usersId,
    String shopId,
    String specName,
    String specParam,
    String stockNum,
    int limit,
    int start)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.goodsId = goodsId;
    setGoodsIdIsSet(true);
    this.goodsName = goodsName;
    this.goodsNewPrice = goodsNewPrice;
    this.goodsImg = goodsImg;
    this.goodsNum = goodsNum;
    this.goodsDetails = goodsDetails;
    this.goodsAddr = goodsAddr;
    this.goodsoldPrice = goodsoldPrice;
    this.skuId = skuId;
    this.attrValId = attrValId;
    this.attrVal = attrVal;
    this.packingList = packingList;
    this.postUid = postUid;
    this.dateline = dateline;
    this.photoType = photoType;
    this.imgPath = imgPath;
    this.webDescribe = webDescribe;
    this.usersId = usersId;
    this.shopId = shopId;
    this.specName = specName;
    this.specParam = specParam;
    this.stockNum = stockNum;
    this.limit = limit;
    setLimitIsSet(true);
    this.start = start;
    setStartIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GoodsEntity(GoodsEntity other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.goodsId = other.goodsId;
    if (other.isSetGoodsName()) {
      this.goodsName = other.goodsName;
    }
    if (other.isSetGoodsNewPrice()) {
      this.goodsNewPrice = other.goodsNewPrice;
    }
    if (other.isSetGoodsImg()) {
      this.goodsImg = other.goodsImg;
    }
    if (other.isSetGoodsNum()) {
      this.goodsNum = other.goodsNum;
    }
    if (other.isSetGoodsDetails()) {
      this.goodsDetails = other.goodsDetails;
    }
    if (other.isSetGoodsAddr()) {
      this.goodsAddr = other.goodsAddr;
    }
    if (other.isSetGoodsoldPrice()) {
      this.goodsoldPrice = other.goodsoldPrice;
    }
    if (other.isSetSkuId()) {
      this.skuId = other.skuId;
    }
    if (other.isSetAttrValId()) {
      this.attrValId = other.attrValId;
    }
    if (other.isSetAttrVal()) {
      this.attrVal = other.attrVal;
    }
    if (other.isSetPackingList()) {
      this.packingList = other.packingList;
    }
    if (other.isSetPostUid()) {
      this.postUid = other.postUid;
    }
    if (other.isSetDateline()) {
      this.dateline = other.dateline;
    }
    if (other.isSetPhotoType()) {
      this.photoType = other.photoType;
    }
    if (other.isSetImgPath()) {
      this.imgPath = other.imgPath;
    }
    if (other.isSetWebDescribe()) {
      this.webDescribe = other.webDescribe;
    }
    if (other.isSetUsersId()) {
      this.usersId = other.usersId;
    }
    if (other.isSetShopId()) {
      this.shopId = other.shopId;
    }
    if (other.isSetSpecName()) {
      this.specName = other.specName;
    }
    if (other.isSetSpecParam()) {
      this.specParam = other.specParam;
    }
    if (other.isSetStockNum()) {
      this.stockNum = other.stockNum;
    }
    this.limit = other.limit;
    this.start = other.start;
  }

  public GoodsEntity deepCopy() {
    return new GoodsEntity(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setGoodsIdIsSet(false);
    this.goodsId = 0;
    this.goodsName = null;
    this.goodsNewPrice = null;
    this.goodsImg = null;
    this.goodsNum = null;
    this.goodsDetails = null;
    this.goodsAddr = null;
    this.goodsoldPrice = null;
    this.skuId = null;
    this.attrValId = null;
    this.attrVal = null;
    this.packingList = null;
    this.postUid = null;
    this.dateline = null;
    this.photoType = null;
    this.imgPath = null;
    this.webDescribe = null;
    this.usersId = null;
    this.shopId = null;
    this.specName = null;
    this.specParam = null;
    this.stockNum = null;
    setLimitIsSet(false);
    this.limit = 0;
    setStartIsSet(false);
    this.start = 0;
  }

  public int getId() {
    return this.id;
  }

  public GoodsEntity setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getGoodsId() {
    return this.goodsId;
  }

  public GoodsEntity setGoodsId(int goodsId) {
    this.goodsId = goodsId;
    setGoodsIdIsSet(true);
    return this;
  }

  public void unsetGoodsId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GOODSID_ISSET_ID);
  }

  /** Returns true if field goodsId is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsId() {
    return EncodingUtils.testBit(__isset_bitfield, __GOODSID_ISSET_ID);
  }

  public void setGoodsIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GOODSID_ISSET_ID, value);
  }

  public String getGoodsName() {
    return this.goodsName;
  }

  public GoodsEntity setGoodsName(String goodsName) {
    this.goodsName = goodsName;
    return this;
  }

  public void unsetGoodsName() {
    this.goodsName = null;
  }

  /** Returns true if field goodsName is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsName() {
    return this.goodsName != null;
  }

  public void setGoodsNameIsSet(boolean value) {
    if (!value) {
      this.goodsName = null;
    }
  }

  public String getGoodsNewPrice() {
    return this.goodsNewPrice;
  }

  public GoodsEntity setGoodsNewPrice(String goodsNewPrice) {
    this.goodsNewPrice = goodsNewPrice;
    return this;
  }

  public void unsetGoodsNewPrice() {
    this.goodsNewPrice = null;
  }

  /** Returns true if field goodsNewPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsNewPrice() {
    return this.goodsNewPrice != null;
  }

  public void setGoodsNewPriceIsSet(boolean value) {
    if (!value) {
      this.goodsNewPrice = null;
    }
  }

  public String getGoodsImg() {
    return this.goodsImg;
  }

  public GoodsEntity setGoodsImg(String goodsImg) {
    this.goodsImg = goodsImg;
    return this;
  }

  public void unsetGoodsImg() {
    this.goodsImg = null;
  }

  /** Returns true if field goodsImg is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsImg() {
    return this.goodsImg != null;
  }

  public void setGoodsImgIsSet(boolean value) {
    if (!value) {
      this.goodsImg = null;
    }
  }

  public String getGoodsNum() {
    return this.goodsNum;
  }

  public GoodsEntity setGoodsNum(String goodsNum) {
    this.goodsNum = goodsNum;
    return this;
  }

  public void unsetGoodsNum() {
    this.goodsNum = null;
  }

  /** Returns true if field goodsNum is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsNum() {
    return this.goodsNum != null;
  }

  public void setGoodsNumIsSet(boolean value) {
    if (!value) {
      this.goodsNum = null;
    }
  }

  public String getGoodsDetails() {
    return this.goodsDetails;
  }

  public GoodsEntity setGoodsDetails(String goodsDetails) {
    this.goodsDetails = goodsDetails;
    return this;
  }

  public void unsetGoodsDetails() {
    this.goodsDetails = null;
  }

  /** Returns true if field goodsDetails is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsDetails() {
    return this.goodsDetails != null;
  }

  public void setGoodsDetailsIsSet(boolean value) {
    if (!value) {
      this.goodsDetails = null;
    }
  }

  public String getGoodsAddr() {
    return this.goodsAddr;
  }

  public GoodsEntity setGoodsAddr(String goodsAddr) {
    this.goodsAddr = goodsAddr;
    return this;
  }

  public void unsetGoodsAddr() {
    this.goodsAddr = null;
  }

  /** Returns true if field goodsAddr is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsAddr() {
    return this.goodsAddr != null;
  }

  public void setGoodsAddrIsSet(boolean value) {
    if (!value) {
      this.goodsAddr = null;
    }
  }

  public String getGoodsoldPrice() {
    return this.goodsoldPrice;
  }

  public GoodsEntity setGoodsoldPrice(String goodsoldPrice) {
    this.goodsoldPrice = goodsoldPrice;
    return this;
  }

  public void unsetGoodsoldPrice() {
    this.goodsoldPrice = null;
  }

  /** Returns true if field goodsoldPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsoldPrice() {
    return this.goodsoldPrice != null;
  }

  public void setGoodsoldPriceIsSet(boolean value) {
    if (!value) {
      this.goodsoldPrice = null;
    }
  }

  public String getSkuId() {
    return this.skuId;
  }

  public GoodsEntity setSkuId(String skuId) {
    this.skuId = skuId;
    return this;
  }

  public void unsetSkuId() {
    this.skuId = null;
  }

  /** Returns true if field skuId is set (has been assigned a value) and false otherwise */
  public boolean isSetSkuId() {
    return this.skuId != null;
  }

  public void setSkuIdIsSet(boolean value) {
    if (!value) {
      this.skuId = null;
    }
  }

  public String getAttrValId() {
    return this.attrValId;
  }

  public GoodsEntity setAttrValId(String attrValId) {
    this.attrValId = attrValId;
    return this;
  }

  public void unsetAttrValId() {
    this.attrValId = null;
  }

  /** Returns true if field attrValId is set (has been assigned a value) and false otherwise */
  public boolean isSetAttrValId() {
    return this.attrValId != null;
  }

  public void setAttrValIdIsSet(boolean value) {
    if (!value) {
      this.attrValId = null;
    }
  }

  public String getAttrVal() {
    return this.attrVal;
  }

  public GoodsEntity setAttrVal(String attrVal) {
    this.attrVal = attrVal;
    return this;
  }

  public void unsetAttrVal() {
    this.attrVal = null;
  }

  /** Returns true if field attrVal is set (has been assigned a value) and false otherwise */
  public boolean isSetAttrVal() {
    return this.attrVal != null;
  }

  public void setAttrValIsSet(boolean value) {
    if (!value) {
      this.attrVal = null;
    }
  }

  public String getPackingList() {
    return this.packingList;
  }

  public GoodsEntity setPackingList(String packingList) {
    this.packingList = packingList;
    return this;
  }

  public void unsetPackingList() {
    this.packingList = null;
  }

  /** Returns true if field packingList is set (has been assigned a value) and false otherwise */
  public boolean isSetPackingList() {
    return this.packingList != null;
  }

  public void setPackingListIsSet(boolean value) {
    if (!value) {
      this.packingList = null;
    }
  }

  public String getPostUid() {
    return this.postUid;
  }

  public GoodsEntity setPostUid(String postUid) {
    this.postUid = postUid;
    return this;
  }

  public void unsetPostUid() {
    this.postUid = null;
  }

  /** Returns true if field postUid is set (has been assigned a value) and false otherwise */
  public boolean isSetPostUid() {
    return this.postUid != null;
  }

  public void setPostUidIsSet(boolean value) {
    if (!value) {
      this.postUid = null;
    }
  }

  public String getDateline() {
    return this.dateline;
  }

  public GoodsEntity setDateline(String dateline) {
    this.dateline = dateline;
    return this;
  }

  public void unsetDateline() {
    this.dateline = null;
  }

  /** Returns true if field dateline is set (has been assigned a value) and false otherwise */
  public boolean isSetDateline() {
    return this.dateline != null;
  }

  public void setDatelineIsSet(boolean value) {
    if (!value) {
      this.dateline = null;
    }
  }

  public String getPhotoType() {
    return this.photoType;
  }

  public GoodsEntity setPhotoType(String photoType) {
    this.photoType = photoType;
    return this;
  }

  public void unsetPhotoType() {
    this.photoType = null;
  }

  /** Returns true if field photoType is set (has been assigned a value) and false otherwise */
  public boolean isSetPhotoType() {
    return this.photoType != null;
  }

  public void setPhotoTypeIsSet(boolean value) {
    if (!value) {
      this.photoType = null;
    }
  }

  public String getImgPath() {
    return this.imgPath;
  }

  public GoodsEntity setImgPath(String imgPath) {
    this.imgPath = imgPath;
    return this;
  }

  public void unsetImgPath() {
    this.imgPath = null;
  }

  /** Returns true if field imgPath is set (has been assigned a value) and false otherwise */
  public boolean isSetImgPath() {
    return this.imgPath != null;
  }

  public void setImgPathIsSet(boolean value) {
    if (!value) {
      this.imgPath = null;
    }
  }

  public String getWebDescribe() {
    return this.webDescribe;
  }

  public GoodsEntity setWebDescribe(String webDescribe) {
    this.webDescribe = webDescribe;
    return this;
  }

  public void unsetWebDescribe() {
    this.webDescribe = null;
  }

  /** Returns true if field webDescribe is set (has been assigned a value) and false otherwise */
  public boolean isSetWebDescribe() {
    return this.webDescribe != null;
  }

  public void setWebDescribeIsSet(boolean value) {
    if (!value) {
      this.webDescribe = null;
    }
  }

  public String getUsersId() {
    return this.usersId;
  }

  public GoodsEntity setUsersId(String usersId) {
    this.usersId = usersId;
    return this;
  }

  public void unsetUsersId() {
    this.usersId = null;
  }

  /** Returns true if field usersId is set (has been assigned a value) and false otherwise */
  public boolean isSetUsersId() {
    return this.usersId != null;
  }

  public void setUsersIdIsSet(boolean value) {
    if (!value) {
      this.usersId = null;
    }
  }

  public String getShopId() {
    return this.shopId;
  }

  public GoodsEntity setShopId(String shopId) {
    this.shopId = shopId;
    return this;
  }

  public void unsetShopId() {
    this.shopId = null;
  }

  /** Returns true if field shopId is set (has been assigned a value) and false otherwise */
  public boolean isSetShopId() {
    return this.shopId != null;
  }

  public void setShopIdIsSet(boolean value) {
    if (!value) {
      this.shopId = null;
    }
  }

  public String getSpecName() {
    return this.specName;
  }

  public GoodsEntity setSpecName(String specName) {
    this.specName = specName;
    return this;
  }

  public void unsetSpecName() {
    this.specName = null;
  }

  /** Returns true if field specName is set (has been assigned a value) and false otherwise */
  public boolean isSetSpecName() {
    return this.specName != null;
  }

  public void setSpecNameIsSet(boolean value) {
    if (!value) {
      this.specName = null;
    }
  }

  public String getSpecParam() {
    return this.specParam;
  }

  public GoodsEntity setSpecParam(String specParam) {
    this.specParam = specParam;
    return this;
  }

  public void unsetSpecParam() {
    this.specParam = null;
  }

  /** Returns true if field specParam is set (has been assigned a value) and false otherwise */
  public boolean isSetSpecParam() {
    return this.specParam != null;
  }

  public void setSpecParamIsSet(boolean value) {
    if (!value) {
      this.specParam = null;
    }
  }

  public String getStockNum() {
    return this.stockNum;
  }

  public GoodsEntity setStockNum(String stockNum) {
    this.stockNum = stockNum;
    return this;
  }

  public void unsetStockNum() {
    this.stockNum = null;
  }

  /** Returns true if field stockNum is set (has been assigned a value) and false otherwise */
  public boolean isSetStockNum() {
    return this.stockNum != null;
  }

  public void setStockNumIsSet(boolean value) {
    if (!value) {
      this.stockNum = null;
    }
  }

  public int getLimit() {
    return this.limit;
  }

  public GoodsEntity setLimit(int limit) {
    this.limit = limit;
    setLimitIsSet(true);
    return this;
  }

  public void unsetLimit() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LIMIT_ISSET_ID);
  }

  /** Returns true if field limit is set (has been assigned a value) and false otherwise */
  public boolean isSetLimit() {
    return EncodingUtils.testBit(__isset_bitfield, __LIMIT_ISSET_ID);
  }

  public void setLimitIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LIMIT_ISSET_ID, value);
  }

  public int getStart() {
    return this.start;
  }

  public GoodsEntity setStart(int start) {
    this.start = start;
    setStartIsSet(true);
    return this;
  }

  public void unsetStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __START_ISSET_ID);
  }

  /** Returns true if field start is set (has been assigned a value) and false otherwise */
  public boolean isSetStart() {
    return EncodingUtils.testBit(__isset_bitfield, __START_ISSET_ID);
  }

  public void setStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __START_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case GOODS_ID:
      if (value == null) {
        unsetGoodsId();
      } else {
        setGoodsId((Integer)value);
      }
      break;

    case GOODS_NAME:
      if (value == null) {
        unsetGoodsName();
      } else {
        setGoodsName((String)value);
      }
      break;

    case GOODS_NEW_PRICE:
      if (value == null) {
        unsetGoodsNewPrice();
      } else {
        setGoodsNewPrice((String)value);
      }
      break;

    case GOODS_IMG:
      if (value == null) {
        unsetGoodsImg();
      } else {
        setGoodsImg((String)value);
      }
      break;

    case GOODS_NUM:
      if (value == null) {
        unsetGoodsNum();
      } else {
        setGoodsNum((String)value);
      }
      break;

    case GOODS_DETAILS:
      if (value == null) {
        unsetGoodsDetails();
      } else {
        setGoodsDetails((String)value);
      }
      break;

    case GOODS_ADDR:
      if (value == null) {
        unsetGoodsAddr();
      } else {
        setGoodsAddr((String)value);
      }
      break;

    case GOODSOLD_PRICE:
      if (value == null) {
        unsetGoodsoldPrice();
      } else {
        setGoodsoldPrice((String)value);
      }
      break;

    case SKU_ID:
      if (value == null) {
        unsetSkuId();
      } else {
        setSkuId((String)value);
      }
      break;

    case ATTR_VAL_ID:
      if (value == null) {
        unsetAttrValId();
      } else {
        setAttrValId((String)value);
      }
      break;

    case ATTR_VAL:
      if (value == null) {
        unsetAttrVal();
      } else {
        setAttrVal((String)value);
      }
      break;

    case PACKING_LIST:
      if (value == null) {
        unsetPackingList();
      } else {
        setPackingList((String)value);
      }
      break;

    case POST_UID:
      if (value == null) {
        unsetPostUid();
      } else {
        setPostUid((String)value);
      }
      break;

    case DATELINE:
      if (value == null) {
        unsetDateline();
      } else {
        setDateline((String)value);
      }
      break;

    case PHOTO_TYPE:
      if (value == null) {
        unsetPhotoType();
      } else {
        setPhotoType((String)value);
      }
      break;

    case IMG_PATH:
      if (value == null) {
        unsetImgPath();
      } else {
        setImgPath((String)value);
      }
      break;

    case WEB_DESCRIBE:
      if (value == null) {
        unsetWebDescribe();
      } else {
        setWebDescribe((String)value);
      }
      break;

    case USERS_ID:
      if (value == null) {
        unsetUsersId();
      } else {
        setUsersId((String)value);
      }
      break;

    case SHOP_ID:
      if (value == null) {
        unsetShopId();
      } else {
        setShopId((String)value);
      }
      break;

    case SPEC_NAME:
      if (value == null) {
        unsetSpecName();
      } else {
        setSpecName((String)value);
      }
      break;

    case SPEC_PARAM:
      if (value == null) {
        unsetSpecParam();
      } else {
        setSpecParam((String)value);
      }
      break;

    case STOCK_NUM:
      if (value == null) {
        unsetStockNum();
      } else {
        setStockNum((String)value);
      }
      break;

    case LIMIT:
      if (value == null) {
        unsetLimit();
      } else {
        setLimit((Integer)value);
      }
      break;

    case START:
      if (value == null) {
        unsetStart();
      } else {
        setStart((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case GOODS_ID:
      return getGoodsId();

    case GOODS_NAME:
      return getGoodsName();

    case GOODS_NEW_PRICE:
      return getGoodsNewPrice();

    case GOODS_IMG:
      return getGoodsImg();

    case GOODS_NUM:
      return getGoodsNum();

    case GOODS_DETAILS:
      return getGoodsDetails();

    case GOODS_ADDR:
      return getGoodsAddr();

    case GOODSOLD_PRICE:
      return getGoodsoldPrice();

    case SKU_ID:
      return getSkuId();

    case ATTR_VAL_ID:
      return getAttrValId();

    case ATTR_VAL:
      return getAttrVal();

    case PACKING_LIST:
      return getPackingList();

    case POST_UID:
      return getPostUid();

    case DATELINE:
      return getDateline();

    case PHOTO_TYPE:
      return getPhotoType();

    case IMG_PATH:
      return getImgPath();

    case WEB_DESCRIBE:
      return getWebDescribe();

    case USERS_ID:
      return getUsersId();

    case SHOP_ID:
      return getShopId();

    case SPEC_NAME:
      return getSpecName();

    case SPEC_PARAM:
      return getSpecParam();

    case STOCK_NUM:
      return getStockNum();

    case LIMIT:
      return getLimit();

    case START:
      return getStart();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case GOODS_ID:
      return isSetGoodsId();
    case GOODS_NAME:
      return isSetGoodsName();
    case GOODS_NEW_PRICE:
      return isSetGoodsNewPrice();
    case GOODS_IMG:
      return isSetGoodsImg();
    case GOODS_NUM:
      return isSetGoodsNum();
    case GOODS_DETAILS:
      return isSetGoodsDetails();
    case GOODS_ADDR:
      return isSetGoodsAddr();
    case GOODSOLD_PRICE:
      return isSetGoodsoldPrice();
    case SKU_ID:
      return isSetSkuId();
    case ATTR_VAL_ID:
      return isSetAttrValId();
    case ATTR_VAL:
      return isSetAttrVal();
    case PACKING_LIST:
      return isSetPackingList();
    case POST_UID:
      return isSetPostUid();
    case DATELINE:
      return isSetDateline();
    case PHOTO_TYPE:
      return isSetPhotoType();
    case IMG_PATH:
      return isSetImgPath();
    case WEB_DESCRIBE:
      return isSetWebDescribe();
    case USERS_ID:
      return isSetUsersId();
    case SHOP_ID:
      return isSetShopId();
    case SPEC_NAME:
      return isSetSpecName();
    case SPEC_PARAM:
      return isSetSpecParam();
    case STOCK_NUM:
      return isSetStockNum();
    case LIMIT:
      return isSetLimit();
    case START:
      return isSetStart();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof GoodsEntity)
      return this.equals((GoodsEntity)that);
    return false;
  }

  public boolean equals(GoodsEntity that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_goodsId = true;
    boolean that_present_goodsId = true;
    if (this_present_goodsId || that_present_goodsId) {
      if (!(this_present_goodsId && that_present_goodsId))
        return false;
      if (this.goodsId != that.goodsId)
        return false;
    }

    boolean this_present_goodsName = true && this.isSetGoodsName();
    boolean that_present_goodsName = true && that.isSetGoodsName();
    if (this_present_goodsName || that_present_goodsName) {
      if (!(this_present_goodsName && that_present_goodsName))
        return false;
      if (!this.goodsName.equals(that.goodsName))
        return false;
    }

    boolean this_present_goodsNewPrice = true && this.isSetGoodsNewPrice();
    boolean that_present_goodsNewPrice = true && that.isSetGoodsNewPrice();
    if (this_present_goodsNewPrice || that_present_goodsNewPrice) {
      if (!(this_present_goodsNewPrice && that_present_goodsNewPrice))
        return false;
      if (!this.goodsNewPrice.equals(that.goodsNewPrice))
        return false;
    }

    boolean this_present_goodsImg = true && this.isSetGoodsImg();
    boolean that_present_goodsImg = true && that.isSetGoodsImg();
    if (this_present_goodsImg || that_present_goodsImg) {
      if (!(this_present_goodsImg && that_present_goodsImg))
        return false;
      if (!this.goodsImg.equals(that.goodsImg))
        return false;
    }

    boolean this_present_goodsNum = true && this.isSetGoodsNum();
    boolean that_present_goodsNum = true && that.isSetGoodsNum();
    if (this_present_goodsNum || that_present_goodsNum) {
      if (!(this_present_goodsNum && that_present_goodsNum))
        return false;
      if (!this.goodsNum.equals(that.goodsNum))
        return false;
    }

    boolean this_present_goodsDetails = true && this.isSetGoodsDetails();
    boolean that_present_goodsDetails = true && that.isSetGoodsDetails();
    if (this_present_goodsDetails || that_present_goodsDetails) {
      if (!(this_present_goodsDetails && that_present_goodsDetails))
        return false;
      if (!this.goodsDetails.equals(that.goodsDetails))
        return false;
    }

    boolean this_present_goodsAddr = true && this.isSetGoodsAddr();
    boolean that_present_goodsAddr = true && that.isSetGoodsAddr();
    if (this_present_goodsAddr || that_present_goodsAddr) {
      if (!(this_present_goodsAddr && that_present_goodsAddr))
        return false;
      if (!this.goodsAddr.equals(that.goodsAddr))
        return false;
    }

    boolean this_present_goodsoldPrice = true && this.isSetGoodsoldPrice();
    boolean that_present_goodsoldPrice = true && that.isSetGoodsoldPrice();
    if (this_present_goodsoldPrice || that_present_goodsoldPrice) {
      if (!(this_present_goodsoldPrice && that_present_goodsoldPrice))
        return false;
      if (!this.goodsoldPrice.equals(that.goodsoldPrice))
        return false;
    }

    boolean this_present_skuId = true && this.isSetSkuId();
    boolean that_present_skuId = true && that.isSetSkuId();
    if (this_present_skuId || that_present_skuId) {
      if (!(this_present_skuId && that_present_skuId))
        return false;
      if (!this.skuId.equals(that.skuId))
        return false;
    }

    boolean this_present_attrValId = true && this.isSetAttrValId();
    boolean that_present_attrValId = true && that.isSetAttrValId();
    if (this_present_attrValId || that_present_attrValId) {
      if (!(this_present_attrValId && that_present_attrValId))
        return false;
      if (!this.attrValId.equals(that.attrValId))
        return false;
    }

    boolean this_present_attrVal = true && this.isSetAttrVal();
    boolean that_present_attrVal = true && that.isSetAttrVal();
    if (this_present_attrVal || that_present_attrVal) {
      if (!(this_present_attrVal && that_present_attrVal))
        return false;
      if (!this.attrVal.equals(that.attrVal))
        return false;
    }

    boolean this_present_packingList = true && this.isSetPackingList();
    boolean that_present_packingList = true && that.isSetPackingList();
    if (this_present_packingList || that_present_packingList) {
      if (!(this_present_packingList && that_present_packingList))
        return false;
      if (!this.packingList.equals(that.packingList))
        return false;
    }

    boolean this_present_postUid = true && this.isSetPostUid();
    boolean that_present_postUid = true && that.isSetPostUid();
    if (this_present_postUid || that_present_postUid) {
      if (!(this_present_postUid && that_present_postUid))
        return false;
      if (!this.postUid.equals(that.postUid))
        return false;
    }

    boolean this_present_dateline = true && this.isSetDateline();
    boolean that_present_dateline = true && that.isSetDateline();
    if (this_present_dateline || that_present_dateline) {
      if (!(this_present_dateline && that_present_dateline))
        return false;
      if (!this.dateline.equals(that.dateline))
        return false;
    }

    boolean this_present_photoType = true && this.isSetPhotoType();
    boolean that_present_photoType = true && that.isSetPhotoType();
    if (this_present_photoType || that_present_photoType) {
      if (!(this_present_photoType && that_present_photoType))
        return false;
      if (!this.photoType.equals(that.photoType))
        return false;
    }

    boolean this_present_imgPath = true && this.isSetImgPath();
    boolean that_present_imgPath = true && that.isSetImgPath();
    if (this_present_imgPath || that_present_imgPath) {
      if (!(this_present_imgPath && that_present_imgPath))
        return false;
      if (!this.imgPath.equals(that.imgPath))
        return false;
    }

    boolean this_present_webDescribe = true && this.isSetWebDescribe();
    boolean that_present_webDescribe = true && that.isSetWebDescribe();
    if (this_present_webDescribe || that_present_webDescribe) {
      if (!(this_present_webDescribe && that_present_webDescribe))
        return false;
      if (!this.webDescribe.equals(that.webDescribe))
        return false;
    }

    boolean this_present_usersId = true && this.isSetUsersId();
    boolean that_present_usersId = true && that.isSetUsersId();
    if (this_present_usersId || that_present_usersId) {
      if (!(this_present_usersId && that_present_usersId))
        return false;
      if (!this.usersId.equals(that.usersId))
        return false;
    }

    boolean this_present_shopId = true && this.isSetShopId();
    boolean that_present_shopId = true && that.isSetShopId();
    if (this_present_shopId || that_present_shopId) {
      if (!(this_present_shopId && that_present_shopId))
        return false;
      if (!this.shopId.equals(that.shopId))
        return false;
    }

    boolean this_present_specName = true && this.isSetSpecName();
    boolean that_present_specName = true && that.isSetSpecName();
    if (this_present_specName || that_present_specName) {
      if (!(this_present_specName && that_present_specName))
        return false;
      if (!this.specName.equals(that.specName))
        return false;
    }

    boolean this_present_specParam = true && this.isSetSpecParam();
    boolean that_present_specParam = true && that.isSetSpecParam();
    if (this_present_specParam || that_present_specParam) {
      if (!(this_present_specParam && that_present_specParam))
        return false;
      if (!this.specParam.equals(that.specParam))
        return false;
    }

    boolean this_present_stockNum = true && this.isSetStockNum();
    boolean that_present_stockNum = true && that.isSetStockNum();
    if (this_present_stockNum || that_present_stockNum) {
      if (!(this_present_stockNum && that_present_stockNum))
        return false;
      if (!this.stockNum.equals(that.stockNum))
        return false;
    }

    boolean this_present_limit = true;
    boolean that_present_limit = true;
    if (this_present_limit || that_present_limit) {
      if (!(this_present_limit && that_present_limit))
        return false;
      if (this.limit != that.limit)
        return false;
    }

    boolean this_present_start = true;
    boolean that_present_start = true;
    if (this_present_start || that_present_start) {
      if (!(this_present_start && that_present_start))
        return false;
      if (this.start != that.start)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_goodsId = true;
    list.add(present_goodsId);
    if (present_goodsId)
      list.add(goodsId);

    boolean present_goodsName = true && (isSetGoodsName());
    list.add(present_goodsName);
    if (present_goodsName)
      list.add(goodsName);

    boolean present_goodsNewPrice = true && (isSetGoodsNewPrice());
    list.add(present_goodsNewPrice);
    if (present_goodsNewPrice)
      list.add(goodsNewPrice);

    boolean present_goodsImg = true && (isSetGoodsImg());
    list.add(present_goodsImg);
    if (present_goodsImg)
      list.add(goodsImg);

    boolean present_goodsNum = true && (isSetGoodsNum());
    list.add(present_goodsNum);
    if (present_goodsNum)
      list.add(goodsNum);

    boolean present_goodsDetails = true && (isSetGoodsDetails());
    list.add(present_goodsDetails);
    if (present_goodsDetails)
      list.add(goodsDetails);

    boolean present_goodsAddr = true && (isSetGoodsAddr());
    list.add(present_goodsAddr);
    if (present_goodsAddr)
      list.add(goodsAddr);

    boolean present_goodsoldPrice = true && (isSetGoodsoldPrice());
    list.add(present_goodsoldPrice);
    if (present_goodsoldPrice)
      list.add(goodsoldPrice);

    boolean present_skuId = true && (isSetSkuId());
    list.add(present_skuId);
    if (present_skuId)
      list.add(skuId);

    boolean present_attrValId = true && (isSetAttrValId());
    list.add(present_attrValId);
    if (present_attrValId)
      list.add(attrValId);

    boolean present_attrVal = true && (isSetAttrVal());
    list.add(present_attrVal);
    if (present_attrVal)
      list.add(attrVal);

    boolean present_packingList = true && (isSetPackingList());
    list.add(present_packingList);
    if (present_packingList)
      list.add(packingList);

    boolean present_postUid = true && (isSetPostUid());
    list.add(present_postUid);
    if (present_postUid)
      list.add(postUid);

    boolean present_dateline = true && (isSetDateline());
    list.add(present_dateline);
    if (present_dateline)
      list.add(dateline);

    boolean present_photoType = true && (isSetPhotoType());
    list.add(present_photoType);
    if (present_photoType)
      list.add(photoType);

    boolean present_imgPath = true && (isSetImgPath());
    list.add(present_imgPath);
    if (present_imgPath)
      list.add(imgPath);

    boolean present_webDescribe = true && (isSetWebDescribe());
    list.add(present_webDescribe);
    if (present_webDescribe)
      list.add(webDescribe);

    boolean present_usersId = true && (isSetUsersId());
    list.add(present_usersId);
    if (present_usersId)
      list.add(usersId);

    boolean present_shopId = true && (isSetShopId());
    list.add(present_shopId);
    if (present_shopId)
      list.add(shopId);

    boolean present_specName = true && (isSetSpecName());
    list.add(present_specName);
    if (present_specName)
      list.add(specName);

    boolean present_specParam = true && (isSetSpecParam());
    list.add(present_specParam);
    if (present_specParam)
      list.add(specParam);

    boolean present_stockNum = true && (isSetStockNum());
    list.add(present_stockNum);
    if (present_stockNum)
      list.add(stockNum);

    boolean present_limit = true;
    list.add(present_limit);
    if (present_limit)
      list.add(limit);

    boolean present_start = true;
    list.add(present_start);
    if (present_start)
      list.add(start);

    return list.hashCode();
  }

  @Override
  public int compareTo(GoodsEntity other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsId()).compareTo(other.isSetGoodsId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsId, other.goodsId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsName()).compareTo(other.isSetGoodsName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsName, other.goodsName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsNewPrice()).compareTo(other.isSetGoodsNewPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsNewPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsNewPrice, other.goodsNewPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsImg()).compareTo(other.isSetGoodsImg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsImg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsImg, other.goodsImg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsNum()).compareTo(other.isSetGoodsNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsNum, other.goodsNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsDetails()).compareTo(other.isSetGoodsDetails());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsDetails()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsDetails, other.goodsDetails);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsAddr()).compareTo(other.isSetGoodsAddr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsAddr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsAddr, other.goodsAddr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsoldPrice()).compareTo(other.isSetGoodsoldPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsoldPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsoldPrice, other.goodsoldPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSkuId()).compareTo(other.isSetSkuId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSkuId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.skuId, other.skuId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAttrValId()).compareTo(other.isSetAttrValId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAttrValId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attrValId, other.attrValId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAttrVal()).compareTo(other.isSetAttrVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAttrVal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attrVal, other.attrVal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackingList()).compareTo(other.isSetPackingList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackingList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.packingList, other.packingList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPostUid()).compareTo(other.isSetPostUid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPostUid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.postUid, other.postUid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateline()).compareTo(other.isSetDateline());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateline()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateline, other.dateline);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhotoType()).compareTo(other.isSetPhotoType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhotoType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.photoType, other.photoType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImgPath()).compareTo(other.isSetImgPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImgPath()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.imgPath, other.imgPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWebDescribe()).compareTo(other.isSetWebDescribe());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWebDescribe()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.webDescribe, other.webDescribe);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUsersId()).compareTo(other.isSetUsersId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsersId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.usersId, other.usersId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShopId()).compareTo(other.isSetShopId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShopId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shopId, other.shopId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSpecName()).compareTo(other.isSetSpecName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSpecName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.specName, other.specName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSpecParam()).compareTo(other.isSetSpecParam());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSpecParam()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.specParam, other.specParam);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStockNum()).compareTo(other.isSetStockNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStockNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stockNum, other.stockNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLimit()).compareTo(other.isSetLimit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLimit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.limit, other.limit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStart()).compareTo(other.isSetStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.start, other.start);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("GoodsEntity(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsId:");
    sb.append(this.goodsId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsName:");
    if (this.goodsName == null) {
      sb.append("null");
    } else {
      sb.append(this.goodsName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsNewPrice:");
    if (this.goodsNewPrice == null) {
      sb.append("null");
    } else {
      sb.append(this.goodsNewPrice);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsImg:");
    if (this.goodsImg == null) {
      sb.append("null");
    } else {
      sb.append(this.goodsImg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsNum:");
    if (this.goodsNum == null) {
      sb.append("null");
    } else {
      sb.append(this.goodsNum);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsDetails:");
    if (this.goodsDetails == null) {
      sb.append("null");
    } else {
      sb.append(this.goodsDetails);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsAddr:");
    if (this.goodsAddr == null) {
      sb.append("null");
    } else {
      sb.append(this.goodsAddr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsoldPrice:");
    if (this.goodsoldPrice == null) {
      sb.append("null");
    } else {
      sb.append(this.goodsoldPrice);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("skuId:");
    if (this.skuId == null) {
      sb.append("null");
    } else {
      sb.append(this.skuId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("attrValId:");
    if (this.attrValId == null) {
      sb.append("null");
    } else {
      sb.append(this.attrValId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("attrVal:");
    if (this.attrVal == null) {
      sb.append("null");
    } else {
      sb.append(this.attrVal);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("packingList:");
    if (this.packingList == null) {
      sb.append("null");
    } else {
      sb.append(this.packingList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("postUid:");
    if (this.postUid == null) {
      sb.append("null");
    } else {
      sb.append(this.postUid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dateline:");
    if (this.dateline == null) {
      sb.append("null");
    } else {
      sb.append(this.dateline);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("photoType:");
    if (this.photoType == null) {
      sb.append("null");
    } else {
      sb.append(this.photoType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("imgPath:");
    if (this.imgPath == null) {
      sb.append("null");
    } else {
      sb.append(this.imgPath);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("webDescribe:");
    if (this.webDescribe == null) {
      sb.append("null");
    } else {
      sb.append(this.webDescribe);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("usersId:");
    if (this.usersId == null) {
      sb.append("null");
    } else {
      sb.append(this.usersId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shopId:");
    if (this.shopId == null) {
      sb.append("null");
    } else {
      sb.append(this.shopId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("specName:");
    if (this.specName == null) {
      sb.append("null");
    } else {
      sb.append(this.specName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("specParam:");
    if (this.specParam == null) {
      sb.append("null");
    } else {
      sb.append(this.specParam);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("stockNum:");
    if (this.stockNum == null) {
      sb.append("null");
    } else {
      sb.append(this.stockNum);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("limit:");
    sb.append(this.limit);
    first = false;
    if (!first) sb.append(", ");
    sb.append("start:");
    sb.append(this.start);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GoodsEntityStandardSchemeFactory implements SchemeFactory {
    public GoodsEntityStandardScheme getScheme() {
      return new GoodsEntityStandardScheme();
    }
  }

  private static class GoodsEntityStandardScheme extends StandardScheme<GoodsEntity> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GoodsEntity struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // GOODS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.goodsId = iprot.readI32();
              struct.setGoodsIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // GOODS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.goodsName = iprot.readString();
              struct.setGoodsNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // GOODS_NEW_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.goodsNewPrice = iprot.readString();
              struct.setGoodsNewPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // GOODS_IMG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.goodsImg = iprot.readString();
              struct.setGoodsImgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // GOODS_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.goodsNum = iprot.readString();
              struct.setGoodsNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // GOODS_DETAILS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.goodsDetails = iprot.readString();
              struct.setGoodsDetailsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // GOODS_ADDR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.goodsAddr = iprot.readString();
              struct.setGoodsAddrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // GOODSOLD_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.goodsoldPrice = iprot.readString();
              struct.setGoodsoldPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SKU_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.skuId = iprot.readString();
              struct.setSkuIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ATTR_VAL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.attrValId = iprot.readString();
              struct.setAttrValIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ATTR_VAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.attrVal = iprot.readString();
              struct.setAttrValIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PACKING_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.packingList = iprot.readString();
              struct.setPackingListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // POST_UID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.postUid = iprot.readString();
              struct.setPostUidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DATELINE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dateline = iprot.readString();
              struct.setDatelineIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PHOTO_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.photoType = iprot.readString();
              struct.setPhotoTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // IMG_PATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.imgPath = iprot.readString();
              struct.setImgPathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // WEB_DESCRIBE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.webDescribe = iprot.readString();
              struct.setWebDescribeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // USERS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.usersId = iprot.readString();
              struct.setUsersIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // SHOP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.shopId = iprot.readString();
              struct.setShopIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // SPEC_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.specName = iprot.readString();
              struct.setSpecNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // SPEC_PARAM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.specParam = iprot.readString();
              struct.setSpecParamIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // STOCK_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stockNum = iprot.readString();
              struct.setStockNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // LIMIT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.limit = iprot.readI32();
              struct.setLimitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // START
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.start = iprot.readI32();
              struct.setStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GoodsEntity struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GOODS_ID_FIELD_DESC);
      oprot.writeI32(struct.goodsId);
      oprot.writeFieldEnd();
      if (struct.goodsName != null) {
        oprot.writeFieldBegin(GOODS_NAME_FIELD_DESC);
        oprot.writeString(struct.goodsName);
        oprot.writeFieldEnd();
      }
      if (struct.goodsNewPrice != null) {
        oprot.writeFieldBegin(GOODS_NEW_PRICE_FIELD_DESC);
        oprot.writeString(struct.goodsNewPrice);
        oprot.writeFieldEnd();
      }
      if (struct.goodsImg != null) {
        oprot.writeFieldBegin(GOODS_IMG_FIELD_DESC);
        oprot.writeString(struct.goodsImg);
        oprot.writeFieldEnd();
      }
      if (struct.goodsNum != null) {
        oprot.writeFieldBegin(GOODS_NUM_FIELD_DESC);
        oprot.writeString(struct.goodsNum);
        oprot.writeFieldEnd();
      }
      if (struct.goodsDetails != null) {
        oprot.writeFieldBegin(GOODS_DETAILS_FIELD_DESC);
        oprot.writeString(struct.goodsDetails);
        oprot.writeFieldEnd();
      }
      if (struct.goodsAddr != null) {
        oprot.writeFieldBegin(GOODS_ADDR_FIELD_DESC);
        oprot.writeString(struct.goodsAddr);
        oprot.writeFieldEnd();
      }
      if (struct.goodsoldPrice != null) {
        oprot.writeFieldBegin(GOODSOLD_PRICE_FIELD_DESC);
        oprot.writeString(struct.goodsoldPrice);
        oprot.writeFieldEnd();
      }
      if (struct.skuId != null) {
        oprot.writeFieldBegin(SKU_ID_FIELD_DESC);
        oprot.writeString(struct.skuId);
        oprot.writeFieldEnd();
      }
      if (struct.attrValId != null) {
        oprot.writeFieldBegin(ATTR_VAL_ID_FIELD_DESC);
        oprot.writeString(struct.attrValId);
        oprot.writeFieldEnd();
      }
      if (struct.attrVal != null) {
        oprot.writeFieldBegin(ATTR_VAL_FIELD_DESC);
        oprot.writeString(struct.attrVal);
        oprot.writeFieldEnd();
      }
      if (struct.packingList != null) {
        oprot.writeFieldBegin(PACKING_LIST_FIELD_DESC);
        oprot.writeString(struct.packingList);
        oprot.writeFieldEnd();
      }
      if (struct.postUid != null) {
        oprot.writeFieldBegin(POST_UID_FIELD_DESC);
        oprot.writeString(struct.postUid);
        oprot.writeFieldEnd();
      }
      if (struct.dateline != null) {
        oprot.writeFieldBegin(DATELINE_FIELD_DESC);
        oprot.writeString(struct.dateline);
        oprot.writeFieldEnd();
      }
      if (struct.photoType != null) {
        oprot.writeFieldBegin(PHOTO_TYPE_FIELD_DESC);
        oprot.writeString(struct.photoType);
        oprot.writeFieldEnd();
      }
      if (struct.imgPath != null) {
        oprot.writeFieldBegin(IMG_PATH_FIELD_DESC);
        oprot.writeString(struct.imgPath);
        oprot.writeFieldEnd();
      }
      if (struct.webDescribe != null) {
        oprot.writeFieldBegin(WEB_DESCRIBE_FIELD_DESC);
        oprot.writeString(struct.webDescribe);
        oprot.writeFieldEnd();
      }
      if (struct.usersId != null) {
        oprot.writeFieldBegin(USERS_ID_FIELD_DESC);
        oprot.writeString(struct.usersId);
        oprot.writeFieldEnd();
      }
      if (struct.shopId != null) {
        oprot.writeFieldBegin(SHOP_ID_FIELD_DESC);
        oprot.writeString(struct.shopId);
        oprot.writeFieldEnd();
      }
      if (struct.specName != null) {
        oprot.writeFieldBegin(SPEC_NAME_FIELD_DESC);
        oprot.writeString(struct.specName);
        oprot.writeFieldEnd();
      }
      if (struct.specParam != null) {
        oprot.writeFieldBegin(SPEC_PARAM_FIELD_DESC);
        oprot.writeString(struct.specParam);
        oprot.writeFieldEnd();
      }
      if (struct.stockNum != null) {
        oprot.writeFieldBegin(STOCK_NUM_FIELD_DESC);
        oprot.writeString(struct.stockNum);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LIMIT_FIELD_DESC);
      oprot.writeI32(struct.limit);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(START_FIELD_DESC);
      oprot.writeI32(struct.start);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GoodsEntityTupleSchemeFactory implements SchemeFactory {
    public GoodsEntityTupleScheme getScheme() {
      return new GoodsEntityTupleScheme();
    }
  }

  private static class GoodsEntityTupleScheme extends TupleScheme<GoodsEntity> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GoodsEntity struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetGoodsId()) {
        optionals.set(1);
      }
      if (struct.isSetGoodsName()) {
        optionals.set(2);
      }
      if (struct.isSetGoodsNewPrice()) {
        optionals.set(3);
      }
      if (struct.isSetGoodsImg()) {
        optionals.set(4);
      }
      if (struct.isSetGoodsNum()) {
        optionals.set(5);
      }
      if (struct.isSetGoodsDetails()) {
        optionals.set(6);
      }
      if (struct.isSetGoodsAddr()) {
        optionals.set(7);
      }
      if (struct.isSetGoodsoldPrice()) {
        optionals.set(8);
      }
      if (struct.isSetSkuId()) {
        optionals.set(9);
      }
      if (struct.isSetAttrValId()) {
        optionals.set(10);
      }
      if (struct.isSetAttrVal()) {
        optionals.set(11);
      }
      if (struct.isSetPackingList()) {
        optionals.set(12);
      }
      if (struct.isSetPostUid()) {
        optionals.set(13);
      }
      if (struct.isSetDateline()) {
        optionals.set(14);
      }
      if (struct.isSetPhotoType()) {
        optionals.set(15);
      }
      if (struct.isSetImgPath()) {
        optionals.set(16);
      }
      if (struct.isSetWebDescribe()) {
        optionals.set(17);
      }
      if (struct.isSetUsersId()) {
        optionals.set(18);
      }
      if (struct.isSetShopId()) {
        optionals.set(19);
      }
      if (struct.isSetSpecName()) {
        optionals.set(20);
      }
      if (struct.isSetSpecParam()) {
        optionals.set(21);
      }
      if (struct.isSetStockNum()) {
        optionals.set(22);
      }
      if (struct.isSetLimit()) {
        optionals.set(23);
      }
      if (struct.isSetStart()) {
        optionals.set(24);
      }
      oprot.writeBitSet(optionals, 25);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetGoodsId()) {
        oprot.writeI32(struct.goodsId);
      }
      if (struct.isSetGoodsName()) {
        oprot.writeString(struct.goodsName);
      }
      if (struct.isSetGoodsNewPrice()) {
        oprot.writeString(struct.goodsNewPrice);
      }
      if (struct.isSetGoodsImg()) {
        oprot.writeString(struct.goodsImg);
      }
      if (struct.isSetGoodsNum()) {
        oprot.writeString(struct.goodsNum);
      }
      if (struct.isSetGoodsDetails()) {
        oprot.writeString(struct.goodsDetails);
      }
      if (struct.isSetGoodsAddr()) {
        oprot.writeString(struct.goodsAddr);
      }
      if (struct.isSetGoodsoldPrice()) {
        oprot.writeString(struct.goodsoldPrice);
      }
      if (struct.isSetSkuId()) {
        oprot.writeString(struct.skuId);
      }
      if (struct.isSetAttrValId()) {
        oprot.writeString(struct.attrValId);
      }
      if (struct.isSetAttrVal()) {
        oprot.writeString(struct.attrVal);
      }
      if (struct.isSetPackingList()) {
        oprot.writeString(struct.packingList);
      }
      if (struct.isSetPostUid()) {
        oprot.writeString(struct.postUid);
      }
      if (struct.isSetDateline()) {
        oprot.writeString(struct.dateline);
      }
      if (struct.isSetPhotoType()) {
        oprot.writeString(struct.photoType);
      }
      if (struct.isSetImgPath()) {
        oprot.writeString(struct.imgPath);
      }
      if (struct.isSetWebDescribe()) {
        oprot.writeString(struct.webDescribe);
      }
      if (struct.isSetUsersId()) {
        oprot.writeString(struct.usersId);
      }
      if (struct.isSetShopId()) {
        oprot.writeString(struct.shopId);
      }
      if (struct.isSetSpecName()) {
        oprot.writeString(struct.specName);
      }
      if (struct.isSetSpecParam()) {
        oprot.writeString(struct.specParam);
      }
      if (struct.isSetStockNum()) {
        oprot.writeString(struct.stockNum);
      }
      if (struct.isSetLimit()) {
        oprot.writeI32(struct.limit);
      }
      if (struct.isSetStart()) {
        oprot.writeI32(struct.start);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GoodsEntity struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(25);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.goodsId = iprot.readI32();
        struct.setGoodsIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.goodsName = iprot.readString();
        struct.setGoodsNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.goodsNewPrice = iprot.readString();
        struct.setGoodsNewPriceIsSet(true);
      }
      if (incoming.get(4)) {
        struct.goodsImg = iprot.readString();
        struct.setGoodsImgIsSet(true);
      }
      if (incoming.get(5)) {
        struct.goodsNum = iprot.readString();
        struct.setGoodsNumIsSet(true);
      }
      if (incoming.get(6)) {
        struct.goodsDetails = iprot.readString();
        struct.setGoodsDetailsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.goodsAddr = iprot.readString();
        struct.setGoodsAddrIsSet(true);
      }
      if (incoming.get(8)) {
        struct.goodsoldPrice = iprot.readString();
        struct.setGoodsoldPriceIsSet(true);
      }
      if (incoming.get(9)) {
        struct.skuId = iprot.readString();
        struct.setSkuIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.attrValId = iprot.readString();
        struct.setAttrValIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.attrVal = iprot.readString();
        struct.setAttrValIsSet(true);
      }
      if (incoming.get(12)) {
        struct.packingList = iprot.readString();
        struct.setPackingListIsSet(true);
      }
      if (incoming.get(13)) {
        struct.postUid = iprot.readString();
        struct.setPostUidIsSet(true);
      }
      if (incoming.get(14)) {
        struct.dateline = iprot.readString();
        struct.setDatelineIsSet(true);
      }
      if (incoming.get(15)) {
        struct.photoType = iprot.readString();
        struct.setPhotoTypeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.imgPath = iprot.readString();
        struct.setImgPathIsSet(true);
      }
      if (incoming.get(17)) {
        struct.webDescribe = iprot.readString();
        struct.setWebDescribeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.usersId = iprot.readString();
        struct.setUsersIdIsSet(true);
      }
      if (incoming.get(19)) {
        struct.shopId = iprot.readString();
        struct.setShopIdIsSet(true);
      }
      if (incoming.get(20)) {
        struct.specName = iprot.readString();
        struct.setSpecNameIsSet(true);
      }
      if (incoming.get(21)) {
        struct.specParam = iprot.readString();
        struct.setSpecParamIsSet(true);
      }
      if (incoming.get(22)) {
        struct.stockNum = iprot.readString();
        struct.setStockNumIsSet(true);
      }
      if (incoming.get(23)) {
        struct.limit = iprot.readI32();
        struct.setLimitIsSet(true);
      }
      if (incoming.get(24)) {
        struct.start = iprot.readI32();
        struct.setStartIsSet(true);
      }
    }
  }

}

